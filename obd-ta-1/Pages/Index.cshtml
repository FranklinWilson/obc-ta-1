@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />

<form method="get" class="mb-3">
    <div class="row g-2 align-items-end">
        <div class="col-auto">
            <label asp-for="StartTime" class="form-label">Start Time</label>
            <input asp-for="StartTime" class="form-control" type="datetime-local" />
        </div>
        <div class="col-auto">
            <label asp-for="EndTime" class="form-label">End Time</label>
            <input asp-for="EndTime" class="form-control" type="datetime-local" />
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
        <div class="col-auto">
            <a href="@(Url.Page("Index"))" class="btn btn-secondary">Clear Filter</a>
        </div>
    </div>
</form>

<div class="row">
    <div class="col-md-6">
        <div class="mb-2">
            <span>Results: @Model.Entries?.Count()</span>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Recording ID</th>
                    <th>Position Yards</th>
                    <th>Temp (°C)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var data in Model.Entries)
                {
                    <tr>
                        <td>@data.Time</td>
                        <td>@data.RecordingId</td>
                        <td>@data.PositionYards</td>
                        <td>@data.Score</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-md-6">
        <div id="map" style="height: 500px; width: 100%;"></div>
    </div>
</div>

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script>
    // Get location data from entries
    var entries = [
        @foreach (var entry in Model.Entries)
        {
            <text>
            { lat: @entry.Lattitude, lng: @entry.Longitude, label: "@entry.Time.ToString("g") (ID: @entry.RecordingId)" },
            </text>
        }
    ];

    // Set default map center
    var defaultLat = entries.length > 0 ? entries[0].lat : 51.5;
    var defaultLng = entries.length > 0 ? entries[0].lng : -0.08;

    var map = L.map('map').setView([defaultLat, defaultLng], 13);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '© OpenStreetMap'
    }).addTo(map);

    // Add marker for each entry
    entries.forEach(function (entry) {
        if (!isNaN(entry.lat) && !isNaN(entry.lng)) {
            L.marker([entry.lat, entry.lng])
                .addTo(map)
                .bindPopup(entry.label);
        }
    });

    // Fit map to markers
    if (entries.length > 0) {
        var group = new L.featureGroup(entries.map(e => L.marker([e.lat, e.lng])));
        map.fitBounds(group.getBounds().pad(0.2));
    }
</script>